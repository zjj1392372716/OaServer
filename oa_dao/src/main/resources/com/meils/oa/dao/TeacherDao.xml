<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper用于映射我们的Dao操作-->
<mapper namespace="com.meils.oa.dao.TeacherDao">

    <!--结果Map集-->
    <resultMap id="teacherResult" type="Teacher">
        <id property="tId" column="tId" javaType="Integer"/>
        <result property="tNum" column="tNum" javaType="String"/>
        <result property="tName" column="tName" javaType="String"/>
        <result property="tPhone" column="tPhone" javaType="String"/>
        <result property="tMajor" column="tMajor" javaType="String"/>
        <result property="tPreCourse" column="tPreCourse" javaType="String"/>
        <result property="createTime" column="createTime" javaType="String"/>
        <result property="startTime" column="startTime" javaType="String"/>
        <result property="isDelete" column="isDelete" javaType="Integer"/>
    </resultMap>

    <!--添加一个-->
    <insert id="insert" parameterType="Teacher">
       insert into teacher (tNum,tName,tPhone,tMajor, tPreCourse, createTime, startTime) values(#{tNum},#{tName},#{tPhone},#{tMajor}, #{tPreCourse}, #{createTime}, #{startTime})
    </insert>


    <!--更新-->
    <update id="update" parameterType="Teacher">
        update teacher set tName = #{tName},tPhone = #{tPhone},tMajor = #{tMajor}, tPreCourse = #{tPreCourse} , startTime = #{startTime}where tId=#{tId}
    </update>

    <!--更新状态-->
    <update id="updateState" parameterType="Teacher">
        update teacher set isDelete = #{isDelete} where tId=#{tId}
    </update>

    <!--更新教师信息-->
    <update id="updateInfo" parameterType="Teacher">
        update teacher set tPhone=#{tPhone}, tMajor=#{tMajor}, tPreCourse = #{tPreCourse} where tNum=#{tNum}
    </update>


    <!--查找某一个-->
    <select id="findOne" parameterType="Integer" resultMap="teacherResult">
        select * from teacher  where tId=#{id}
    </select>

    <!--通过编号查找id-->
    <select id="findOne1" parameterType="String" resultMap="teacherResult">
        select * from teacher  where tNum =#{tNum}
    </select>

    <!--总数-->
    <select id="selectNums" resultType="java.lang.Integer">
        select count(*) from teacher
     </select>

    <!--获取最大id-->
    <select id="getMaxId" resultType="java.lang.Integer">
        select max(tId) from teacher
     </select>

    <!--分页查找-->
    <select id="selectList" parameterType="map" resultMap="teacherResult">
        select * from teacher order by createTime desc limit #{currIndex} , #{pageSize}
    </select>

    <!--获取全部-->
    <select id="getAll" resultMap="teacherResult">
        select * from teacher
    </select>
</mapper>